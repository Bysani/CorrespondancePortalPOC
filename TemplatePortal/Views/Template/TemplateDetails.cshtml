@using EfDBContext;
@model Template

@{
    Layout = null;
}
<!DOCTYPE html>
<html>
<head>
    <script type="text/javascript">

        function saveTemplateDetails() {
           
            const editorData = myEditor.getData();
            var template = new Object();
            template.Id = $("#txtId").val();
            template.name = $("#txtName").val();
            template.createdDate = $("#txtDate").val();
            template.statusId = $("#txtStatusId").val();
            template.body = editorData;
            $.ajax({
                type: 'POST',
                url: '/Template/SaveTemplate',
                data: template,
                success: function (result) {
                    alert('Successfully received Data ');
                    console.log(result);
                },
                error: function () {
                    alert('Failed to receive the Data');
                    console.log('Failed ');
                }
            })
        }

        function emailTemplateDetails() {
            
            const editorData = myEditor.getData();
            var template = new Object();
            template.Id = $("#txtId").val();
            template.name = $("#txtName").val();
            template.createdDate = $("#txtDate").val();
            template.statusId = $("#txtStatusId").val();
            template.body = editorData;
            $.ajax({
                type: 'POST',
                url: '/Template/SendTemplate?barCodeSelection=' + $("#txtPreference").val(),
                data: template,
                success: function (result) {
                    alert('Successfully received Data ');
                    console.log(result);
                },
                error: function () {
                    alert('Failed to receive the Data');
                    console.log('Failed ');
                }
            })
        }

        $('#selPreference').on('change', function () {
            var preference = $(this).val();
            $("#txtPreference").val(preference);
            $("#divPreferences").hide();
        });
       
    </script>
</head>
<body>
    <div id="editor" title="Compose Message" style="height:500px !important;width:600px !important">
        @Html.Raw(Model.Body)
    </div>
    <input type="text" id="txtName" value="@Model.Name" style="display:none;" />
    <input type="text" id="txtDate" value="@Model.CreatedDate" style="display:none;" />
    <input type="text" id="txtId" value="@Model.Id" style="display:none;" />
    <input type="text" id="txtStatusId" value="@Model.StatusId" style="display:none;" />
    <input type="text" id="txtPreference" value="" style="display:none;" />
    <div id="divPreferences" style="display:none; float:right;margin-right:870px;">
        <select id="selPreference">
            <option id="QR Code" value="QR Code" >
                QR Code
            </option>
            <option id="UPC A barcode" value="UPC A barcode" >
                UPC A barcode
            </option>
            <option id="UPC E barcode" value="UPC E barcode" >
                UPC E barcode
            </option>
            <option id="OMR barcode" value="OMR barcode" >
                OMR barcode
            </option>
        </select>
    </div>
    <div></div>
    <script>
        var myEditor;
        // This sample still does not showcase all CKEditor 5 features (!)
        // Visit https://ckeditor.com/docs/ckeditor5/latest/features/index.html to browse all the features.
        CKEDITOR.ClassicEditor.create(document.getElementById("editor"), {
            // https://ckeditor.com/docs/ckeditor5/latest/features/toolbar/toolbar.html#extended-toolbar-configuration-format
            toolbar: {
                items: [
                    'findAndReplace', 'selectAll', '|',
                    'heading', '|',
                    'bold', 'italic', 'strikethrough', 'underline', 'code', 'subscript', 'superscript', 'removeFormat', '|',
                    'bulletedList', 'numberedList', 'todoList', '|',
                    'outdent', 'indent', '|',
                    'undo', 'redo',
                    '-',
                    'fontSize', 'fontFamily', 'fontColor', 'fontBackgroundColor', 'highlight', '|',
                    'alignment', '|',
                    'link', 'insertImage', 'blockQuote', 'insertTable', 'mediaEmbed', 'codeBlock', 'htmlEmbed', '|',
                    'specialCharacters', 'horizontalLine', 'pageBreak', '|',
                    'textPartLanguage', '|',
                    'sourceEditing'
                ],
                shouldNotGroupWhenFull: true
            },
            // Changing the language of the interface requires loading the language file using the <script> tag.
            // language: 'es',
            list: {
                properties: {
                    styles: true,
                    startIndex: true,
                    reversed: true
                }
            },
            // https://ckeditor.com/docs/ckeditor5/latest/features/headings.html#configuration
            heading: {
                options: [
                    { model: 'paragraph', title: 'Paragraph', class: 'ck-heading_paragraph' },
                    { model: 'heading1', view: 'h1', title: 'Heading 1', class: 'ck-heading_heading1' },
                    { model: 'heading2', view: 'h2', title: 'Heading 2', class: 'ck-heading_heading2' },
                    { model: 'heading3', view: 'h3', title: 'Heading 3', class: 'ck-heading_heading3' },
                    { model: 'heading4', view: 'h4', title: 'Heading 4', class: 'ck-heading_heading4' },
                    { model: 'heading5', view: 'h5', title: 'Heading 5', class: 'ck-heading_heading5' },
                    { model: 'heading6', view: 'h6', title: 'Heading 6', class: 'ck-heading_heading6' }
                ]
            },
            // https://ckeditor.com/docs/ckeditor5/latest/features/editor-placeholder.html#using-the-editor-configuration
            placeholder: 'Welcome to CKEditor 5!',
            // https://ckeditor.com/docs/ckeditor5/latest/features/font.html#configuring-the-font-family-feature
            fontFamily: {
                options: [
                    'default',
                    'Arial, Helvetica, sans-serif',
                    'Courier New, Courier, monospace',
                    'Georgia, serif',
                    'Lucida Sans Unicode, Lucida Grande, sans-serif',
                    'Tahoma, Geneva, sans-serif',
                    'Times New Roman, Times, serif',
                    'Trebuchet MS, Helvetica, sans-serif',
                    'Verdana, Geneva, sans-serif'
                ],
                supportAllValues: true
            },
            // https://ckeditor.com/docs/ckeditor5/latest/features/font.html#configuring-the-font-size-feature
            fontSize: {
                options: [10, 12, 14, 'default', 18, 20, 22],
                supportAllValues: true
            },
            // Be careful with the setting below. It instructs CKEditor to accept ALL HTML markup.
            // https://ckeditor.com/docs/ckeditor5/latest/features/general-html-support.html#enabling-all-html-features
            htmlSupport: {
                allow: [
                    {
                        name: /.*/,
                        attributes: true,
                        classes: true,
                        styles: true
                    }
                ]
            },
            // Be careful with enabling previews
            // https://ckeditor.com/docs/ckeditor5/latest/features/html-embed.html#content-previews
            htmlEmbed: {
                showPreviews: true
            },
            // https://ckeditor.com/docs/ckeditor5/latest/features/link.html#custom-link-attributes-decorators
            link: {
                decorators: {
                    addTargetToExternalLinks: true,
                    defaultProtocol: 'https://',
                    toggleDownloadable: {
                        mode: 'manual',
                        label: 'Downloadable',
                        attributes: {
                            download: 'file'
                        }
                    }
                }
            },
            // https://ckeditor.com/docs/ckeditor5/latest/features/mentions.html#configuration

            // The "super-build" contains more premium features that require additional configuration, disable them below.
            // Do not turn them on unless you read the documentation and know how to configure them and setup the editor.
            removePlugins: [
                'RealTimeCollaborativeComments',
                'RealTimeCollaborativeTrackChanges',
                'RealTimeCollaborativeRevisionHistory',
                'PresenceList',
                'Comments',
                'TrackChanges',
                'TrackChangesData',
                'RevisionHistory',
                'Pagination',
                'WProofreader'

            ]
        }).then(editor => {
            console.log('Editor was initialized', editor);
            myEditor = editor;
            editor.editing.view.document.on('change:isFocused', (evt, data, isFocused) => {
                const selection = evt.source.selection;
                if (selection) {
                    var selectedElement = selection.getSelectedElement();
                    if (selectedElement != null && selectedElement.name === "figure") {
                        var imageAttributes = selectedElement._children[0]._attrs;
                        imageAttributes.forEach(item => {
                            if (item && item == "imgDummyBarCode") {
                                //$("#divPreferences").dialog("open");
                                $("#divPreferences").show();
                            }

                        })
                    }


                    //var selectedElement = Array.from(selection.getSelectedBlocks())
                    //if (selectedElement && selectedElement?.length > 0) {
                    //    selectedElement.forEach(element => {
                    //        if (element.name === "imageBlock") {
                    //            element._attrs.forEach(item => {
                    //                if (item && item === "/images/DummyBarCode.jpg" && dummyImageSelected === false) {
                    //                    setDummyImageSelected(true);
                    //                }
                    //                else {
                    //                    setDummyImageSelected(false)
                    //                }
                    //            })
                    //        }
                    //        else {
                    //            setDummyImageSelected(false)
                    //        }
                    //    });
                    //}
                }
            });
        })
            .catch(err => {
                console.error(err.stack);
            });;


    </script>

    <button id="btnTemplateSave" type="button" onclick="saveTemplateDetails()">Save Template</button>

    <button id="btnTemplateSave" type="button" onclick="emailTemplateDetails()">Email Template</button>
</body>
</html>